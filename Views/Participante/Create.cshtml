@model SGC.Models.Participante

@{
    ViewBag.Title = "Crear Participante";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles
{
    <style>
        .datepicker {
            z-index: 9999 !important;
        }
    </style>
}

<h2 class="page-title">Crear</h2>

<div id="seleccionar">
    @using (Html.BeginForm("Seleccionar", "Participante", FormMethod.Post, new { }))
    {
        @Html.AntiForgeryToken()

        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption">
                    Participante
                </div>
                <div class="actions">
                    <button type="button" id="btnNuevo" class="btn btn-sm btn-default">
                        Nuevo Participante
                    </button>
                </div>
            </div>
            <div class="portlet-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <input type="hidden" name="idComercializacion" value="@ViewBag.idComercializacion" />
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.contacto, "Participante", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.contacto.idContacto, (SelectList)ViewBag.contactos, "Seleccionar", htmlAttributes: new { @class = "form-control select2" })
                            @Html.ValidationMessageFor(model => model.contacto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-6">
                        @Html.ActionLink("Volver", "List", new { id = ViewBag.idComercializacion }, new { @class = "btn btn-default" })
                    </div>
                    <div class="col-md-6 text-right">
                        <input type="submit" value="Guardar" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<div id="nuevo" hidden>
    @using (Html.BeginForm("Create", "Participante", FormMethod.Post, new { }))
    {
        @Html.AntiForgeryToken()

        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption">
                    Participante
                </div>
                <div class="actions">
                    <button type="button" id="btnSeleccionar" class="btn btn-sm btn-default">
                        Seleccionar Contacto
                    </button>
                </div>
            </div>
            <div class="portlet-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <input type="hidden" name="idComercializacion" value="@ViewBag.idComercializacion" />
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.contacto.nombres, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.contacto.nombres, new { htmlAttributes = new { @class = "form-control nombre-propio", placeholder = "Nombres" } })
                            @Html.ValidationMessageFor(model => model.contacto.nombres, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.contacto.apellidoPaterno, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.contacto.apellidoPaterno, new { htmlAttributes = new { @class = "form-control nombre-propio", placeholder = "Apellido Paterno" } })
                            @Html.ValidationMessageFor(model => model.contacto.apellidoPaterno, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.contacto.apellidoMaterno, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.contacto.apellidoMaterno, new { htmlAttributes = new { @class = "form-control nombre-propio", placeholder = "Apellido Materno" } })
                            @Html.ValidationMessageFor(model => model.contacto.apellidoMaterno, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.contacto.run, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.contacto.run, new { htmlAttributes = new { @class = "form-control", placeholder = "R.U.N", id = "run" } })
                            @Html.ValidationMessageFor(model => model.contacto.run, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.contacto.fechaNacimiento, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.contacto.fechaNacimiento, new { htmlAttributes = new { @class = "form-control datepicker datetimepicker", placeholder = "Fecha Nacimiento" } })
                @Html.ValidationMessageFor(model => model.contacto.fechaNacimiento, "", new { @class = "text-danger" })
            </div>
        </div>*@
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.contacto.correo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.contacto.correo, new { htmlAttributes = new { @class = "form-control", placeholder = "Correo electrónico" } })
                            @Html.ValidationMessageFor(model => model.contacto.correo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.contacto.telefono, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.contacto.telefono, new { htmlAttributes = new { @class = "form-control", placeholder = "Teléfono/Celular" } })
                            @Html.ValidationMessageFor(model => model.contacto.telefono, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-6">
                        @Html.ActionLink("Volver", "List", new { id = ViewBag.idComercializacion }, new { @class = "btn btn-default" })
                    </div>
                    <div class="col-md-6 text-right">
                        <input type="submit" value="Guardar" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            $('#btnNuevo').click(function (){
                $('#seleccionar').hide();
                $('#nuevo').show();
            })
            $('#btnSeleccionar').click(function (){
                $('#seleccionar').show();
                $('#nuevo').hide();
            })
            console.log('@ViewBag.error');
            if ('@ViewBag.error' === 'True') {
                $('#btnNuevo').trigger('click');
            }
        });
    </script>
}