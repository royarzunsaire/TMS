@model SGC.Models.Comercializacion

@{
    ViewBag.Title = "Asistencia Participantes";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string value = "";
    bool asistio = false;
    int i = 0;
}

<div class="page-title" style="margin-bottom: 0">
    <div class="row">
        <div class="col-md-12">
            Administrar Participantes
        </div>
        <div class="col-md-4">
            <small>Curso: @Model.cotizacion.curso.nombreCurso</small>
        </div>
        <div class="col-md-4">
            <small>Comercialización: @Model.cotizacion.codigoCotizacion</small>
        </div>
    </div>
</div>

<div class="portlet light bordered col-md-12">
    <div class="portlet-title">
        <div class="caption">
            Asistencia
        </div>
        <div class="tools">
            @Html.ActionLink("Descargar Contactos", "ContactosExcel", new { id = Model.idComercializacion }, htmlAttributes: new { @datatoggle = "tooltip", @title = "Contactos" })
            @Html.ActionLink("Descargar Excel", "AsistenciaExcel", new { id = Model.idComercializacion }, htmlAttributes: new { @datatoggle = "tooltip", @title = "R18" })
            <a href="javascript:;" class="collapse"> </a>
            <a href="javascript:;" class="fullscreen"> </a>
        </div>
    </div>
    <div class="portlet-body ">
        @using (Html.BeginForm("GuardarAsistencia", "Participante", FormMethod.Post, new { @id = ("form-guardarAsistencia") }))
        {
            <input type="hidden" name="idComercializacion" value="@Model.idComercializacion" />
            <input type="hidden" name="returnUrl" value="Asistencia" />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="scrollmenu">
                <table class="table table-striped table-bordered table-hover dt-responsive " cellspacing="0">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayName("Participante")
                            </th>
                            <th>
                                @Html.DisplayName("RUN")
                            </th>
                            <th>
                                @Html.DisplayName("Teléfono")
                            </th>
                            @foreach (var item in Model.bloques.OrderBy(x => x.fecha))
                            {
                                <th>
                                    @Html.DisplayFor(modelItem => item.fecha) (@Html.DisplayFor(modelItem => item.horarioInicio) - @Html.DisplayFor(modelItem => item.horarioTermino))
                                </th>
                                <th>
                                    @Html.DisplayName("Descripción")
                                </th>
                            }
                            @*<th style="width:100px">
                                <th style="width:100px">
                                </th>*@
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.participantes.OrderBy(x => x.contacto.nombreCompleto))
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.contacto.nombreCompleto)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.contacto.run)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.contacto.telefono)
                                </td>
                                @foreach (var bloque in Model.bloques.OrderBy(x => x.fecha))
                                {
                                    //using (Html.BeginForm("CambiarAsistencia", "Participante", FormMethod.Post, new { @id = ("form-" + bloque.idBloque + "-" + item.idParticipante) }))
                                    //{
                                    <td class="text-center">

                                        @Html.AntiForgeryToken()

                                        @if (item.asistencia.Where(x => x.bloque.idBloque == bloque.idBloque).FirstOrDefault() != null)
                                        {
                                            value = item.asistencia.Where(x => x.bloque.idBloque == bloque.idBloque).FirstOrDefault().descripcion;

                                            if (item.asistencia.Where(x => x.bloque.idBloque == bloque.idBloque).FirstOrDefault().asistio)
                                            {
                                                asistio = true;
                                                <div class="form-check form-check-flat">
                                                    <label class="form-check-label">
                                                        <input class="check" type="checkbox" id="check-@(bloque.idBloque + "-" + item.idParticipante)" name="check[@i]" value="" checked />
                                                    </label>
                                                </div>
                                            }
                                            else
                                            {
                                                asistio = false;
                                                <div class="form-check form-check-flat">
                                                    <label class="form-check-label">
                                                        <input class="check" type="checkbox" id="check-@(bloque.idBloque + "-" + item.idParticipante)" name="check[@i]" value="" />
                                                    </label>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            value = "";
                                            <div class="form-check form-check-flat">
                                                <label class="form-check-label">
                                                    <input class="check" type="checkbox" id="check-@(bloque.idBloque + "-" + item.idParticipante)" name="check[@i]" value="" />
                                                </label>
                                            </div>
                                        }
                                        <input type="hidden" name="idBloque[@i]" value="@bloque.idBloque" />
                                        <input type="hidden" name="idParticipante[@i]" value="@item.idParticipante" />
                                        <input type="hidden" id="select-@(bloque.idBloque + "-" + item.idParticipante)" name="select[@i]" value="@asistio.ToString()" />
                                    </td>
                                    <td>
                                        <div class="form-check form-check-flat">
                                            <label class="form-check-label">
                                                <input class="description" id="@(bloque.idBloque + "-" + item.idParticipante)" type="text" name="descripcion[@i]" value="@value" />
                                            </label>
                                            @*  <label id="guardando-@(bloque.idBloque + "-" + item.idParticipante)" class="form-check-label"></label>*@
                                        </div>
                                        <div class="form-check form-check-flat">
                                            <label id="guardando-@(bloque.idBloque + "-" + item.idParticipante)" class="form-check-label"></label>
                                        </div>
                                    </td>
                                    //}
                                    i++;
                                }
                            </tr>
                        }
                        <tr>
                            <th class="text-center" colspan="3">Total por bloque:</th>
                            @foreach (var bloque in Model.bloques.OrderBy(x => x.fecha))
                            {
                                <th class="cont text-center" colspan="2" id="@bloque.idBloque">0 /@Model.participantes.Count()</th>
                            }
                        </tr>
                    </tbody>
                </table>
            </div>


            <div class="row">
                <div class="col-md-6">
                    @if (ViewBag.returnUrl != null)
                    {
                        <a class="btn btn-default" href="@ViewBag.returnUrl">Volver</a>
                    }
                    else
                    {
                        @Html.ActionLink("Volver", "List", new { id = ViewBag.idComercializacion }, new { @class = "btn btn-default" })
                    }
                </div>

                <div class="col-md-6 text-right">
                    <input type="submit" id="btnGuardar" value="Guardar" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
</div>

@section Scripts{
    <script>
        $(".check").change(function (e) {
            if ($("#" + this.id.replace("check", "select")).val() == "False") {
                $("#" + this.id.replace("check", "select")).val("True");
            } else {
                $("#" + this.id.replace("check", "select")).val("False");
            }
        });

        //function delay(callback, ms) {
        //    var timer = 0;
        //    return function () {
        //        var context = this, args = arguments;
        //        clearTimeout(timer);
        //        timer = setTimeout(function () {
        //            callback.apply(context, args);
        //        }, ms || 0);
        //    };
        //}

        //$('.check').change(function (e) {
        //    var id = this.id.replace("check", "select");
        //    $('#' + id).val($(this.id).val());
        //});
        //$('.description').keyup(delay(function (e) {

        //    //var idBloque = parseInt(this.id.split('-')[0]);
        //    //var idParticipante = parseInt(this.id.split('-')[1]);
        //    var form = $('#form-guardarAsistencia');
        //    var url = form.attr('action');
        //    var save = $('#guardando-' + this.id);
        //    var select = $('#select-' + this.id);
        //    var check = $('#check-' + this.id)[0].checked;
        //    if (check) {
        //        select.val(true);
        //    } else {
        //        select.val(false);
        //    }
        //    console.log('Time elapsed!', this.value);
        //    save.html("<p  style='color: red'>Guardando...</p>");
        //    $.ajax({
        //        type: "POST",
        //        url: url,
        //        data: form.serialize(), // serializes the form's elements.
        //        success: function (data) {
        //            cont();
        //            $('#check' + this.id).prop('checked', data)
        //            setTimeout(function () {
        //                save.html("<p  style='color: blue'>Guardado Correctamente...</p>");
        //            }, 500);
        //            setTimeout(function () {
        //                save.html("");
        //            }, 3000);
        //        }
        //    });
        //}, 500));

        function cont() {
            $(".cont").each(function () {
                var cont = $("#" + this.id);
                var total = parseInt(cont.html().split("/")[1]);
                cont.html("0/" + total);
            });

            $('input[type=checkbox]').each(function () {
                if (this.checked) {
                    var id = this.id.split("-")[1];
                    var cont = $("#" + id);
                    var cant = parseInt(cont.html().split("/")[0]);
                    var total = parseInt(cont.html().split("/")[1]);
                    cont.html((cant + 1) + "/" + total);
                }
            });
        }

        $("input[type=checkbox]").on("change", function () {
            cont();
        });

        $(document).ready(function () {
            cont();
        });
    </script>
}
