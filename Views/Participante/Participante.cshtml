@model SGC.Models.Contacto

@{
    string action = Convert.ToString(ViewContext.RouteData.Values["Action"]);
    bool qr = action.Contains("ParticipanteQR");
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Datos del Participante";
    bool isRepresentante = false;
    if (qr)
    {
        Layout = "~/Views/Shared/_LayoutNotAut.cshtml";
    }
    if (ViewBag.isRepresentante == null)
    {
        isRepresentante = false;
    }
    else
    {
        isRepresentante = ViewBag.isRepresentante;
    }
}

@using (Html.BeginForm("ParticipanteData", "Participante", FormMethod.Post, new { @id = ("form-ModalParticipanteCliente") }))
{
    @Html.AntiForgeryToken()
}
<h4>Datos del alumno</h4>
<div class="portlet light bordered">
    <div class="portlet-title">
        <div class="caption">
            @Model.nombreCompleto [@Model.run]
        </div>
        <div class="tools">
            <a href="javascript:;" class="expand"> </a>
            <a href="javascript:;" class="fullscreen"> </a>
        </div>
    </div>
    <div class="portlet-body" id="datos-cliente" style="display: block;">
        <div class="row">
            @if (ViewBag.foto != null)
            {
                <div class="col-md-6">
                    <div class="container">
                        <img src="~/Files/@ViewBag.foto.credenciales.nombreArchivo" style="max-width:100px; max-height:100px;border:1px solid grey" />
                    </div>
                </div>
            }
            else
            {
                <div class="col-md-6">
                    <div class="container">
                        <img src="~/Content/img/perfil.jpg" style="max-width:100px; max-height:100px;border:1px solid grey" />
                    </div>
                </div>
            }

        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.nombreCompleto, htmlAttributes: new { @class = "control-label" })
                    <hr class="separador-ver" />
                    @Html.EditorFor(model => model.nombreCompleto, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "border: 0" } })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.run, htmlAttributes: new { @class = "control-label" })
                    <hr class="separador-ver" />
                    @Html.EditorFor(model => model.run, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "border: 0" } })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label" })
                    <hr class="separador-ver" />
                    @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "border: 0" } })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label" })
                    <hr class="separador-ver" />
                    @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "border: 0" } })
                </div>
            </div>
        </div>
        @if (!isRepresentante)
        {
            <div class="row">
                @Html.ActionLink("Editar", "Edit", "Contacto", new { id = Model.idContacto }, new { @class = "btn btn-success" })
                @Html.ActionLink("Ver", "Details", "Contacto", new { id = Model.idContacto }, new { @class = "btn btn-link" })
            </div>
        }
    </div>
</div>

<h3 class="page-title">
    Cursos Realizados
</h3>
<div class="row">
    <div class="col-md-12">
        <div class="portlet box blue-dark">
            <div class="portlet-title">
                <div class="caption">
                    Comercializaciones
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse"> </a>
                    <a href="javascript:;" class="fullscreen"> </a>
                </div>
                <!--
                <div class="actions">
                    <button type="button" class="btn btn-default" id="btnCerrarNode" style="margin-right:15px">Arreglar Generador de Documentos</button>
                </div> -->
            </div>
            <div class="portlet-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <table class="table table-striped table-bordered table-hover dt-responsive dataTable" id="sys-table-comercializacion" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Codigo</th>
                            <th> Nombre Curso</th>
                            <th>Empresa</th>
                            <th>Tipo Ejecucion</th>
                            <th>Comercial</th>
                            @if (!isRepresentante)
                            {
                                <th>Bloque</th>
                                <th>Relatores</th>
                            }
                            <th>Fecha de Inicio</th>
                            <th>Fecha de Termino</th>
                            <th>Vigencia</th>
                            <th>Nota Final</th>
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Volver", "Index", "", new { @class = "btn btn-default" })
</div>

@section Scripts{

    <script>
        $(document).ready(function () {
            var representante = '@isRepresentante';
            var form = $('#form-ModalParticipanteCliente');
            var url = form.attr('action');
            var id = @Model.idContacto;
            var action = '@qr';
            var columns= [

                { "data": "codigoCotizacion" },
                { "data": "nombreCurso" },
                { "data": "nombreEmpresa" },
                { "data": "tipoEjecucion" },
                { "data": "comercial" },
                { "data": "bloques" },
                { "data": "relatores" },
                { "data": "fechaInicio" },
                { "data": "fechaTermino" },
                { "data": "vigenciaCredenciales" },

                { "data": "nota" },

                { "data": "menu" },
            ];
            if (representante == "True") {
                columns = [

                    { "data": "codigoCotizacion" },
                    { "data": "nombreCurso" },
                    { "data": "nombreEmpresa" },
                    { "data": "tipoEjecucion" },
                    { "data": "comercial" },
                    { "data": "fechaInicio" },
                    { "data": "fechaTermino" },
                    { "data": "vigenciaCredenciales" },

                    { "data": "nota" },

                    { "data": "menu" },
                ];
            }

            var table = $("#sys-table-comercializacion").DataTable({
                destroy: true,
                autoWidth: false,
                responsive: true,
                "lengthMenu": [
                    [10, 15, 20, 25, -1],
                    [10, 15, 20, 25, "All"]
                ],
                processing: true,
                serverSide: true,
                order: [0, "asc"],
                language: { processing: "Cargando...Por favor espere" },
                ajax: {
                    method: "POST",
                    url: url,
                    dataType: "json",
                    data: { contactoId: id ,action},
                    @*data: { contactoId: @Model.idContacto}*@
                    error: function (request, status, error) {
                        alert(request.responseText);
                    },
                },
                columns: columns
            });
        });
    </script>
}
