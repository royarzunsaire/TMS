@model SGC.Models.DocumentoCompromiso

@{
    ViewBag.Title = "Editar Documento de Compromiso";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="page-title">Editar</h2>

@using (Html.BeginForm("Edit", "DocumentoCompromiso", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">
            <div class="portlet light bordered">
                <div class="portlet-title">
                    <div class="caption">
                        Documento de Compromiso
                    </div>
                </div>
                <div class="portlet-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.idDocumentoCompromiso)
                    <input type="hidden" name="idComercializacion" value="@ViewBag.idComercializacion" />
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.tipoVenta.tipoPago, htmlAttributes: new { @class = "control-label" })
                                @if (ViewBag.codigoSence != null && ViewBag.tieneCodigoSence != "on")
                                {
                                    @Html.EnumDropDownListFor(model => model.tipoVenta.tipoPago, htmlAttributes: new { @class = "form-control select2", @id = "tipoPago" })
                                }
                                else
                                {
                                    <select class="form-control select2" id="tipoPago">
                                        <option value="2">Costo Empresa</option>
                                    </select>
                                }
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group" id="tipoDocCompromisoForm" hidden>
                                @Html.LabelFor(model => model.tipoDocCompromiso, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.tipoDocCompromiso.idTipoDocumentosPago, (SelectList)ViewBag.tiposDocCompromiso, "Seleccionar", htmlAttributes: new { @class = "form-control select2", id = "tipoDocCompromiso" })
                                @Html.ValidationMessage("tipoDocCompromiso", "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group" id="oticForm" hidden>
                                @Html.Label("OTIC", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("otics", (SelectList)ViewBag.otics, htmlAttributes: new { @class = "form-control select2", id = "otic" })
                                @Html.ValidationMessage("otic", "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.numeroSerie, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.numeroSerie, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.numeroSerie, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.monto, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.monto, new { htmlAttributes = new { @class = "form-control currency", @type = "text" } })
                                @Html.ValidationMessageFor(model => model.monto, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            @Html.Label("", "Archivo", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @if (Model.documento != null)
                            {
                                <i class="fa fa-download"></i>
                                @Html.ActionLink(Model.documento.nombreArchivo, "Descargar", new { id = Model.documento.idStorage }, new { })
                            }
                        </div>
                        <div class="col-md-12">
                            <input type="file" name="file" accept="application/pdf" />
                            @Html.ValidationMessage("archivo", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.ActionLink("Volver", "DocumentosCompromisoComercializacion", "DocumentoCompromiso", new { id = ViewBag.idComercializacion }, new { @class = "btn btn-default" })
                            </div>
                            <div class="col-md-6 text-right">
                                <input type="submit" value="Guardar" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            $("#tipoPago").change(function () {
                mostrarOtic();
                mostrarTiposDocCompromiso();
            });
            mostrarOtic();
            mostrarTiposDocCompromiso();

            $('#form').submit(function () {
                $('#form input').unmask();
            });
        });
        function mostrarOtic() {
            if ($("#tipoPago").val() === "0") {
                $("#oticForm").show();
            }
            else {
                $("#oticForm").hide();
            }
        }
        function mostrarTiposDocCompromiso() {
            if ($("#tipoPago").val() === "2") {
                $("#tipoDocCompromisoForm").show();
            }
            else {
                $("#tipoDocCompromisoForm").hide();
            }
        }
    </script>
}
