@model SGC.Models.Otic

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar Otic</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.idOtic)
    <div class="form-group">
        @Html.LabelFor(model => model.rut, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.rut, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.rut, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.direccion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.contacto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownList("contacto", (SelectList)ViewBag.Contactos, htmlAttributes: new { @class = "form-control select2", id = "idContacto" })
            @Html.ValidationMessageFor(model => model.contacto, "", new { @class = "text-danger" })
            <input id="contactoSeleccionado" value="@ViewBag.contactoSeleccionado" type="hidden" />
        </div>
        <div class="col-md-2">
            <div class="btn btn-primary btn-large glyphicon glyphicon-plus" onclick="return loadModal('myModal', 'myModalContent', '/Contacto/NewModalCreate', {idDropDownList:'idContacto'});" alt="Crear Contacto"></div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Volver", "Index", "", new { @class = "btn btn-default" })
</div>

<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" id='myModalContent'>
            </div>
        </div>
    </div>
</div>

<script>
    // Mostrar las opciones que ya estaban seleccionadas
    contactosOpciones = $("#idContacto option");
    girosSeleccionados = JSON.parse($('#contactoSeleccionado').val());
    for (i = 0; i < contactosOpciones.length; i++) {
        if (contactosOpciones[i].value === girosSeleccionados) {
            contactosOpciones[i].selected = "true";
        }
    }
</script>
