@model SGC.Models.Factura

@{
    ViewBag.Title = "Nueva Factura";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="page-title">Crear</h2>

@using (Html.BeginForm("Create", "Factura", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">
            <div class="portlet light bordered">
                <div class="portlet-title">
                    <div class="caption">
                        Factura
                    </div>
                </div>
                <div class="portlet-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <input type="hidden" name="idDocumentoCompromiso" value="@ViewBag.idDocumentoCompromiso" />
                    <input type="hidden" name="idComercializacion" value="@ViewBag.idComercializacion" />
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.costo, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.costo, new { htmlAttributes = new { @class = "form-control currency", @type = "text" } })
                                @Html.ValidationMessageFor(model => model.costo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="input-group">
                                @Html.LabelFor(model => model.fechaFacturacion, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.fechaFacturacion, new { htmlAttributes = new { @class = "form-control datepicker " } })

                                <span class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </span>
                                @Html.ValidationMessageFor(model => model.fechaFacturacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.tipo, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.tipo, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                @*@Html.EnumDropDownListFor(model => model.tipo, "Seleccionar", htmlAttributes: new { @class = "form-control", disabled = "disabled" })*@
                                @Html.ValidationMessageFor(model => model.tipo, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.tipo)
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.Label("", "Archivo", htmlAttributes: new { @class = "control-label" })


                                <div class="col-md-12 text-right">
                                    @Html.Label(" ", htmlAttributes: new { @class = "btn btn-info btn-sm glyphicon glyphicon-plus", @datatoggle = "tooltip", @id = "add_file" })

                                </div>


                                <div id="archivos_cont" class="col-md-12">
                                    <input class="archivos" type="file" name="files[0]" id="files_0" accept="application/pdf" />
                                    <input class="archivos" type="file" name="files[1]" id="files_1" accept="application/pdf" />
                                </div>


                                @Html.ValidationMessage("archivo", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.observacion, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.observacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.ActionLink("Volver", "DocumentosCompromisoComercializacion", "DocumentoCompromiso", new { id = ViewBag.idComercializacion }, new { @class = "btn btn-default" })
                            </div>
                            <div class="col-md-6 text-right">
                                <input type="submit" value="Guardar" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script src="~/Content/js/Comercializacion/Guardar-v3.js"></script>
    <script>

        $(document).ready(function () {


            $('#form').submit(function () {
                $('#form input').unmask();
            });
            $("#add_file").on("click", function () {
                var archivos = $(".archivos");
                var idList = new Array();

                var i;
                for (i = 0; i < archivos.length; i++) {
                    idList.push(parseInt(archivos[i].id.split("_")[1]));
                }
                var max = Math.max.apply(null, idList) + 1;
                var archivos = $("#archivos_cont");
                var new_child = jQuery(document.createElement('div')).html('<input class="archivos" type="file" name="files[' + max + ']" id="files_' + max + '" accept="application/pdf" />');
                archivos.append(new_child);

            });

        });
    </script>
}
