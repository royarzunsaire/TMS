@model SGC.Models.ViewModelFacturacion

@{
    ViewBag.Title = "Facturas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.r11 != null)
{
    if (Model.r11.codigoSence != null && Model.comercializacion.cotizacion.tieneCodigoSence != "on")
    {
        <div class="row">
            <div class="col-md-12">
                <h2 class="page-title">Administrar Facturas de la Comercialización</h2>
                <div class="alert alert-default text-center" style="margin-bottom: 5px; padding: 5px; background-color:#add8e6">SENCE</div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        <h2 class="page-title">Administrar Facturas de la Comercialización</h2>
    }
}
else
{
    <h2 class="page-title">Administrar Facturas de la Comercialización</h2>
}
<div class="portlet box blue-dark">
    <div class="portlet-title">
        <div class="caption">
            Facturas
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"> </a>
            <a href="javascript:;" class="fullscreen"> </a>
        </div>
        <div class="actions">
            <button type="button" class="btn btn-default btn-circle btn-sm" onclick="ShowModalInformacion()" style="margin-right: 10px">
                Información de la Comercialización
            </button>
        </div>
    </div>
    <div class="portlet-body">
        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped table-bordered table-hover dt-responsive dataTable" id="sys-table" cellspacing="0">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.factura.numero)</th>
                            <th>@Html.DisplayNameFor(model => model.factura.fechaCreacion)</th>
                            <th>@Html.DisplayNameFor(model => model.factura.costo)</th>
                            <th>@Html.DisplayNameFor(model => model.factura.valorPagado)</th>
                            <th>@Html.DisplayNameFor(model => model.factura.tipo)</th>
                            <th>@Html.DisplayNameFor(model => model.factura.fechaFacturacion)</th>
                            <th>@Html.DisplayNameFor(model => model.factura.estados.LastOrDefault().estado)</th>
                            <th>Fecha Estado</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.comercializacion.cotizacion.documentosCompromiso != null)
                        {
                            foreach (var item in Model.comercializacion.cotizacion.documentosCompromiso.OrderByDescending(x => x.fechaCreacion))
                            {
                                if (item.factura != null)
                                {
                                    if (item.factura.softDelete == false)
                                    {
                                        DateTime? fechaEstado = item.factura.estados.LastOrDefault().fechaEstado;
                                        string feccha = fechaEstado.HasValue ? fechaEstado.Value.ToString("dd-MM-yyyy") : "Sin Fecha";
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => item.factura.numero)</td>
                                            <td>@Html.DisplayFor(modelItem => item.factura.fechaCreacion)</td>
                                            <td>@Html.DisplayFor(modelItem => item.factura.costo)</td>
                                            <td>@Html.DisplayFor(modelItem => item.factura.valorPagado)</td>
                                            <td>@Html.DisplayFor(modelItem => item.factura.tipo)</td>
                                            <td>@Html.DisplayFor(modelItem => item.factura.fechaFacturacion)</td>
                                            <td id="tdEstado-@item.factura.idFactura">
                                                <input type="hidden" id="seleccionado-@item.factura.idFactura" value="@((int)item.factura.estados.LastOrDefault().estado)" />
                                                @using (Html.BeginForm("CambiarEstado", "Factura", FormMethod.Post, new { id = "form-estado-" + @item.factura.idFactura }))
                                                {
                                                    @Html.AntiForgeryToken()
                                                    @Html.HiddenFor(modelItem => item.factura.idFactura)
                                                    @Html.EnumDropDownListFor(modelItem => item.factura.estados.LastOrDefault().estado, htmlAttributes: new { @class = "form-control", @onchange = "confirmarCambiarEstado(" + @item.factura.idFactura + ")", @id = "item_estado-" + item.factura.idFactura })
                                                }
                                            </td>
                                            <td>@feccha
                                            </td>
                                            <td class="text-center">
                                                @using (Html.BeginForm("Delete", "Factura", FormMethod.Post, new { @id = "notificationForm_" + @item.factura.idFactura }))
                                                {
                                                    <div class="input-group-btn">
                                                        @Html.ActionLink(" ", "Pago", "Factura", new { id = item.factura.idFactura, id2 = Model.comercializacion.idComercializacion }, htmlAttributes: new { @class = "btn btn-default btn-sm glyphicon glyphicon-usd", @datatoggle = "tooltip", @title = "Ingresar Pago" })
                                                        @Html.ActionLink(" ", "Edit", new { id = item.factura.idFactura, id2 = Model.comercializacion.idComercializacion }, htmlAttributes: new { @class = "btn btn-warning btn-sm glyphicon glyphicon-edit", @datatoggle = "tooltip", @title = "Editar" })
                                                        @Html.ActionLink(" ", "Details", new { id = item.factura.idFactura }, htmlAttributes: new { @class = "btn btn-info btn-sm glyphicon glyphicon-list", @datatoggle = "tooltip", @title = "Ver" })
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="idComercializacion" value="@Model.comercializacion.idComercializacion" />
                                                        <a class="btn btn-danger btn-sm glyphicon glyphicon-trash" href="javascript:confirmDelete('Delete','@(item.factura.idFactura)','Factura')" title="Eliminar"></a>
                                                    </div>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Volver", "Facturable", new { id = Model.comercializacion.idComercializacion }, new { @class = "btn btn-default" })
</div>

@section topLevel{
    @{Html.RenderPartial("_RenderConfirm.Modal"); }
}

<div id="modal-informacion" class="modal fade modalx" tabindex="-1" data-keyboard="false" role="alertdialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div id="modal-content" class="modal-content">
            <div class="modal-header">
                <div class="row">
                    <div class="col-md-6">
                        <h4 class="modal-title">Información de la Comercialización</h4>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.comercializacion.cotizacion.codigoCotizacion, htmlAttributes: new { @class = "control-label" })
                            <hr class="separador-ver" />
                            @Html.EditorFor(model => model.comercializacion.cotizacion.codigoCotizacion, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                        </div>

                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("Lider Comercial", htmlAttributes: new { @class = "control-label" })
                            <hr class="separador-ver" />
                            @Html.EditorFor(model => model.comercializacion.usuarioCreador.UserName, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                        </div>
                    </div>
                    @if (Model.comercializacion.cotizacion.tipoCurso != "Duplicado Credencial" && Model.comercializacion.cotizacion.tipoCurso != "Arriendo de Sala" && Model.comercializacion.cotizacion.tipoCurso != "Tramitación Licencia")
                    {
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.comercializacion.cotizacion.modalidad, htmlAttributes: new { @class = "control-label" })
                                <hr class="separador-ver" />
                                @Html.EditorFor(model => model.comercializacion.cotizacion.modalidad, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.comercializacion.senceNet, htmlAttributes: new { @class = "control-label" })
                                <hr class="separador-ver" />
                                @if (Model.r11 != null)
                                {
                                    if (Model.r11.codigoSence != null && Model.comercializacion.cotizacion.tieneCodigoSence != "on")
                                    {
                                        @Html.EditorFor(model => model.comercializacion.senceNet, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.comercializacion.fechaInicio, htmlAttributes: new { @class = "control-label" })
                            <hr class="separador-ver" />
                            @Html.EditorFor(model => model.comercializacion.fechaInicio, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.comercializacion.fechaTermino, htmlAttributes: new { @class = "control-label" })
                            <hr class="separador-ver" />
                            @Html.EditorFor(model => model.comercializacion.fechaTermino, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-offset-3 col-md-3">
                        <div class="form-group">
                            @Html.Label("Valor Total", htmlAttributes: new { @class = "control-label" })
                            <hr class="separador-ver" />
                            <div class="form-control" style="border: 0">
                                @String.Format("{0:C}", Model.comercializacion.valorFinal - Model.comercializacion.descuento)
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                @if (Model.comercializacion.cotizacion.tipoCurso != "Duplicado Credencial" && Model.comercializacion.cotizacion.tipoCurso != "Arriendo de Sala" && Model.comercializacion.cotizacion.tipoCurso != "Tramitación Licencia")
                {
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.comercializacion.cotizacion.curso.nombreCurso, htmlAttributes: new { @class = "control-label" })
                                <hr class="separador-ver" />
                                @Html.EditorFor(model => model.comercializacion.cotizacion.curso.nombreCurso, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.comercializacion.cotizacion.nombreDiploma, htmlAttributes: new { @class = "control-label" })
                                <hr class="separador-ver" />
                                @Html.EditorFor(model => model.comercializacion.cotizacion.nombreDiploma, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.comercializacion.cotizacion.tipoCurso, htmlAttributes: new { @class = "control-label" })
                                <hr class="separador-ver" />
                                @Html.EditorFor(model => model.comercializacion.cotizacion.tipoCurso, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.comercializacion.cotizacion.curso.tipoEjecucion, htmlAttributes: new { @class = "control-label" })
                                <hr class="separador-ver" />
                                @Html.EditorFor(model => model.comercializacion.cotizacion.curso.tipoEjecucion, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                            </div>
                        </div>
                        @if (@Model.r11 != null)
                        {
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.r11.horasTeoricas, htmlAttributes: new { @class = "control-label" })
                                    <hr class="separador-ver" />
                                    <div class="form-control" style="border: 0">
                                        @String.Format("{0:0.#}", Model.r11.horasTeoricas)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.r11.horasPracticas, htmlAttributes: new { @class = "control-label" })
                                    <hr class="separador-ver" />
                                    <div class="form-control" style="border: 0">
                                        @String.Format("{0:0.#}", Model.r11.horasPracticas)
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.comercializacion.cotizacion.cantidadParticipante, htmlAttributes: new { @class = "control-label" })
                                <hr class="separador-ver" />
                                @Html.EditorFor(model => model.comercializacion.cotizacion.cantidadParticipante, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>
                    <hr />
                }
                <h4>Facturación</h4>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.comercializacion.cotizacion.contactoEncargadoPago, htmlAttributes: new { @class = "control-label" })
                            <hr class="separador-ver" />
                            <a href="@String.Format("{0:C}","mailto:"+ @ViewBag.Encargado.correo)">@ViewBag.Encargado.nombreCompleto</a>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.comercializacion.cotizacion.contacto, htmlAttributes: new { @class = "control-label" })
                            <hr class="separador-ver" />
                            <a href="@String.Format("{0:C}","mailto:"+ @ViewBag.Contacto.correo)">@ViewBag.Contacto.nombreCompleto</a>

                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.comercializacion.cotizacion.telefonoCorporativo, htmlAttributes: new { @class = "control-label" })
                            <hr class="separador-ver" />
                            @Html.EditorFor(model => model.comercializacion.cotizacion.telefonoCorporativo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "border: 0" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.comercializacion.cotizacion.nombreEmpresa, htmlAttributes: new { @class = "control-label" })
                            <hr class="separador-ver" />
                            @Html.EditorFor(model => model.comercializacion.cotizacion.nombreEmpresa, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.comercializacion.cotizacion.razonSocial, htmlAttributes: new { @class = "control-label" })
                            <hr class="separador-ver" />
                            @Html.EditorFor(model => model.comercializacion.cotizacion.razonSocial, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.comercializacion.cotizacion.cliente.rut, htmlAttributes: new { @class = "control-label" })
                            <hr class="separador-ver" />
                            @Html.EditorFor(model => model.comercializacion.cotizacion.cliente.rut, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div id="modal-confirmar" class="modal fade draggable-modal modalx" data-backdrop="static" tabindex="-1" role="alertdialog" aria-hidden="true">
    <div class="modal-dialog">
        <div id="modal-content" class="modal-content">
            <input type="hidden" id="idFacturaConfirmar" name="idFactura" value="" />
            <div class="modal-body text-center">
                <p>¿Esta seguro que desea cambiar de estado?</p>
            </div>
            <div id="estadoContainer" class="col-sm-12" style="float: inherit">
                <label for="fechaEstado">Fecha del Estado:</label>
                <input id="fechaEstado" class="form-control" type="date" name="fechaEstado" value="" style="margin-bottom: 1rem" />
                <label for="observacion">Observación</label>
                <input id="observacion" class="form-control" type="text" name="observacion" placeholder="Observación" value="" />
            </div>
            <div class="modal-footer" style="border: 0">
                <button id="btnConfirmar" type="button" onclick="cambiarEstado()" class="btn btn-primary">Aceptar</button>
                <button id="btnCancelar" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        function ShowModalInformacion() {
            $('#modal-informacion').modal({ keyboard: true }, 'show');
        }
    </script>

    <script>
        $("#item_estado-" + $("#idFacturaConfirmar").val()).val($("#seleccionado-" + $("#idFacturaConfirmar").val()).val());
        function confirmarCambiarEstado(id) {
            $("#idFacturaConfirmar").val(id);
            var estado = $("#item_estado-" + id).val();
            $("#fechaEstado").val("");
            $("#observacion").val("");
            if (estado > 0 && estado < 5) {
                $("#estadoContainer").show();
            } else {
                $("#estadoContainer").hide();
            }
            $('#modal-confirmar').modal({ keyboard: true }, 'show');
        }
        $("#btnCancelar").click(function () {
            $("#item_estado-" + $("#idFacturaConfirmar").val()).val($("#seleccionado-" + $("#idFacturaConfirmar").val()).val());
        });
        //data: $("#form-estado-" + $("#idFacturaConfirmar").val()).serialize(),
        function cambiarEstado() {
            $('#modal-confirmar').modal('hide');

            var formData = new FormData();
            formData.append('id', $("#idFacturaConfirmar").val());
            formData.append('estado', $("#item_estado-" + $("#idFacturaConfirmar").val()).val());
            formData.append('fechaEstado', $("#fechaEstado").val());
            formData.append('observacion', $("#observacion").val());

            $.ajax({
                url: "/Factura/CambiarEstado",
                type: "post",
                processData: false,
                contentType: false,
                data: formData,
                success: function (response) {
                    console.log("Ajax call is done");
                    if (response.HasErrors) {
                        $("#item_estado-" + $("#idFacturaConfirmar").val()).val($("#seleccionado-" + $("#idFacturaConfirmar").val()).val());

                        showErrorMessages(response.Errors, 'Se produjo un error al cambiar de estado.');
                    }
                    else {
                        $("#seleccionado-" + $("#idFacturaConfirmar").val()).val($("#item_estado-" + $("#idFacturaConfirmar").val()).val())
                        location.reload();
                    }
                }
            });
            return false;
        }
        function showErrorMessages(errors, titulo) {
            errores = "";
            for (i = 0; i < errors.length; i++) {
                errores = errores + "<br>" + errors[i].Value;
            }
            Swal.fire({
                title: titulo,
                html: errores
            })
        }
    </script>
}