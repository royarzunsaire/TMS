@model IEnumerable<SGC.Models.RelatorCurso>

@{
    ViewBag.Title = "Listado RelatorCurso";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>
    Relatores & Cursos @Html.ActionLink(" ", "Create", new { }, htmlAttributes: new { @class = "btn btn-primary btn-large glyphicon glyphicon-plus", @datatoggle = "tooltip", @title = "Nuevo" })
</h2>
<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("cursos", "Cursos", htmlAttributes: new { @class = "control-label" })
            <div class="row">
                <div class="col-md-10">
                    @Html.DropDownList("cursos", (SelectList)ViewBag.cursos, "", htmlAttributes: new { @class = "form-control select2", id = "cursos", onchange = "cargarTabla()" })
                </div>
                <div class="col-md-2">
                    <button class="btn btn-default" type="button" id="btnBorrarCursos"><i class="fa fa-times"></i></button>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.Label("relatores", "Relatores", htmlAttributes: new { @class = "control-label" })
            <div class="row">
                <div class="col-md-10">
                    @Html.DropDownList("relatores", (SelectList)ViewBag.relatores, "", htmlAttributes: new { @class = "form-control select2", id = "relatores", onchange = "cargarTabla()" })
                </div>
                <div class="col-md-2">
                    <button class="btn btn-default" type="button" id="btnBorrarRelatores"><i class="fa fa-times"></i></button>
                </div>
            </div>
        </div>
    </div>
</div>
<table id="table" class="table table-striped table-bordered table-hover dt-responsive dataTable no-footer">
    <thead>
        <tr>
            <th hidden>
                @Html.DisplayName("idCurso")
            </th>
            <th hidden>
                @Html.DisplayName("idRelator")
            </th>
            <th>
                @Html.DisplayName("Curso")
            </th>
            <th>
                @Html.DisplayName("Tipo Ejecución")
            </th>
            <th>
                @Html.DisplayName("Relator")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.validoSence)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.reuf)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.curso.idCurso)
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.relator.idRelator)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.curso.nombreCurso)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.curso.tipoEjecucion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.relator.contacto.nombreCompleto)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.validoSence)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.reuf)
                </td>
                <td>
                    @Html.ActionLink(" ", "Edit", new { id = item.idCurso + "-" + item.idRelator }, htmlAttributes: new { @class = "btn btn-warning btn-sm glyphicon glyphicon-edit", @datatoggle = "tooltip", @title = "Editar" })
                    @*@Html.ActionLink(" ", "Details", new { /* id=item.PrimaryKey */ }, htmlAttributes: new { @class = "btn btn-info glyphicon glyphicon-list", @datatoggle = "tooltip", @title = "Ver" })*@
                    @Html.ActionLink(" ", "Delete", new { id = item.idCurso + "-" + item.idRelator }, htmlAttributes: new { @class = "btn btn-danger btn-sm glyphicon glyphicon-trash", @datatoggle = "tooltip", @title = "Borrar" })
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        /* Custom filtering function which will search data in column 3 between two values */
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                cursoFiltro = $("#cursos").val();
                relatorFiltro = $("#relatores").val();
                curso = data[0];
                relator = data[1];
                if (((cursoFiltro === '') && (relatorFiltro === '')) ||
                    ((relatorFiltro === '') && curso === cursoFiltro) ||
                    (relatorFiltro === relator && (cursoFiltro === '')) ||
                    (cursoFiltro === curso && relator === relatorFiltro)) {
                    return true;
                }
                return false;
            }
        );

        //var table = $('#table').DataTable();

        var table = $('#table').DataTable({
            stateSave: true,
            scrollY: "900px",
            scrollCollapse: true,
            "language": {
                "lengthMenu": "Mostrar _MENU_ registros",
                "zeroRecords": "No se encontraron resultados",
                "info": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "infoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sSearch": "Buscar:",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "sProcessing": "Procesando...",
            }
        });

        $(document).ready(function () {

            // Event listener to the two range filtering inputs to redraw on input
            //$('#cursos, #relatores').change(function () {
            //    table.draw();
            //});

            $('#btnBorrarCursos').click(function () {
                $('#cursos').val('');
                $('#cursos').trigger('change');
            });

            $('#btnBorrarRelatores').click(function () {
                $('#relatores').val('');
                $('#relatores').trigger('change');
            });
        });
        function cargarTabla() {
            table.draw();
        }
    </script>
}