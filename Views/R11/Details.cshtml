@model SGC.Models.ViewModelR11

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title = "Detalle";
}

@section Styles {
    <style>
        textarea {
            resize: none;
        }

        .modal {
            text-align: center;
            padding: 0 !important;
        }

            .modal:before {
                content: '';
                display: inline-block;
                height: 100%;
                vertical-align: middle;
                margin-right: -4px;
            }

        .modal-dialog {
            display: inline-block;
            text-align: left;
            vertical-align: middle;
        }
    </style>
}

@{
    List<SelectListItem> listItemCategoria = new List<SelectListItem>();
    if (Model.categoriaR11 != null)
    {
        foreach (var item in Model.categoriaR11)
        {
            listItemCategoria.Add(new SelectListItem
            {
                Text = item.categoria,
                Value = item.idCategoria.ToString()
            });
        }
    }


}
<h2>R11</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="portlet light bordered">
    <div class="portlet-title">
        <div class="caption">
            Información del Curso
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"> </a>
            <a href="javascript:;" class="fullscreen"> </a>
        </div>
        <div class="actions">
            <div class="inputs pull-right">
                @Html.ActionLink("Descargar", "ReportePdf", new { id = Model.r11Entity.idR11 }, new { @class = "btn btn-default btn-circle btn-sm" })
                @Html.ActionLink("Editar", "Edit", new { id = Model.r11Entity.idR11 }, new { @class = "btn btn-default btn-circle btn-sm", style = "margin-right: 10px" })
            </div>
        </div>
    </div>
    <div class="portlet-body">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.curso[0].nombreCurso)
                    @Html.EditorFor(model => model.curso[0].nombreCurso, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "border: 0px" } })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => Model.categoriaR11.First().categoria)
                    @foreach (var itemList in listItemCategoria)
                    {
                        if (itemList.Value == Model.r11Entity.idCategoria.ToString())
                        {
                            @Html.EditorFor(modelItem => itemList.Text, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "border: 0px" } })
                        }
                    }
                </div>
            </div>
            <div class="col-md-12">
                <h2>Descripción de Contenido</h2>
                <hr />
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.r11Entity.fundamentacionTecnica)
                    @Html.TextAreaFor(model => model.r11Entity.fundamentacionTecnica, new { @class = "form-control", rows = "3", @readonly = "readonly", style = "border: 0px" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.r11Entity.objetivoGeneral)
                    @Html.TextAreaFor(model => model.r11Entity.objetivoGeneral, new { @class = "form-control", rows = "3", @readonly = "readonly", style = "border: 0px" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.r11Entity.poblacionObjetivo)
                    @Html.TextAreaFor(model => model.r11Entity.poblacionObjetivo, new { @class = "form-control", rows = "3", @readonly = "readonly", style = "border: 0px" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.r11Entity.requisitosIngreso)
                    @Html.TextAreaFor(model => model.r11Entity.requisitosIngreso, new { @class = "form-control", rows = "3", @readonly = "readonly", style = "border: 0px" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.r11Entity.tecnicaMetodologica)
                    @Html.TextAreaFor(model => model.r11Entity.tecnicaMetodologica, new { @class = "form-control", rows = "3", @readonly = "readonly", style = "border: 0px" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.r11Entity.materialDidactico)
                    @Html.TextAreaFor(model => model.r11Entity.materialDidactico, new { @class = "form-control", rows = "3", @readonly = "readonly", style = "border: 0px" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.r11Entity.materialEntregable)
                    @Html.TextAreaFor(model => model.r11Entity.materialEntregable, new { @class = "form-control", rows = "3", @readonly = "readonly", style = "border: 0px" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.r11Entity.requisitosReglamentarios)
                    @Html.TextAreaFor(model => model.r11Entity.requisitosReglamentarios, new { @class = "form-control", rows = "3", @readonly = "readonly", style = "border: 0px" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <table id="idTableContenidoEspecifico" class="table table-striped table-bordered table-hover dt-responsive">
                        <thead>
                            <tr>
                                <th>Contenido Especifico</th>
                                <th>Desarrollo</th>
                                <th>Horas T</th>
                                <th>Horas P</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.contenidoEspecifico != null)
                            {
                                var i = 0;
                                foreach (var itemContenidoEspecifico in Model.contenidoEspecifico)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => itemContenidoEspecifico.nombre)
                                        </td>
                                        <td>
                                            @foreach (string itemBreakLine in Model.itemContenidoEspecificoR11.Where(x => x.idContenidoEspecificoR11 == itemContenidoEspecifico.idContenidoEspecificoR11).Select(x => x.contenidoEspecifico).ToList())
                                            {
                                                @Html.DisplayFor(modelItem => itemBreakLine)
                                                <br />
                                            }
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => itemContenidoEspecifico.horasT)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => itemContenidoEspecifico.horasP)
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <table class="table table-striped table-bordered table-hover dt-responsive">
                        <thead>
                            <tr>
                                <th>Nivel de escolaridad</th>
                                <th>Años de experiencia minima</th>
                                <th>Marcar</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>Nivel de Enseñanza Media</td>
                                <td>Con 10 años de Experiencia</td>
                                <td>@Html.CheckBoxFor(x => x.escolaridadR11[0].marca, new { disabled = "disabled" })</td>
                            </tr>
                            <tr>
                                <td>Nivel Técnico (Liceo Industrial)</td>
                                <td>Con 7 años de Experiencia</td>
                                <td>@Html.CheckBoxFor(x => x.escolaridadR11[1].marca, new { disabled = "disabled" })</td>
                            </tr>
                            <tr>
                                <td>Nivel Técnico Universitario</td>
                                <td>Con 5 años de Experiencia</td>
                                <td>@Html.CheckBoxFor(x => x.escolaridadR11[2].marca, new { disabled = "disabled" })</td>
                            </tr>
                            <tr>
                                <td>Nivel Universitario o Superior</td>
                                <td>Con 3 años de Experiencia</td>
                                <td>@Html.CheckBoxFor(x => x.escolaridadR11[3].marca, new { disabled = "disabled" })</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group">
                @*<div class="col-md-6">
                @Html.LabelFor(model => model.r11Entity.nombreModulo)
                @Html.EditorFor(model => model.r11Entity.nombreModulo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "border: 0px" } })
            </div>*@
                <div class="col-md-6">
                    @Html.Label("Relator")
                    @Html.EditorFor(model => model.r11Entity.relator.contacto.nombreCompleto, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "border: 0px" } })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.r11Entity.cantPersona)
                    @Html.EditorFor(model => model.r11Entity.cantPersona, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "border: 0px", @type = "text" } })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.r11Entity.horasTeoricas)
                    @Html.EditorFor(model => model.r11Entity.horasTeoricas, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "border: 0px", @type = "text" } })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.r11Entity.horasPracticas)
                    @Html.EditorFor(model => model.r11Entity.horasPracticas, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "border: 0px", @type = "text" } })
                </div>
                @if (Model.r11Entity.codigoSence != null && Model.r11Entity.codigoSence != "")
                {
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.r11Entity.mesesDuracionVigencia)
                        @Html.EditorFor(model => model.r11Entity.mesesDuracionVigencia, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "border: 0px", @type = "text" } })
                    </div>
                }
            </div>
            @if (Model.r11Entity.codigoSence != null && Model.r11Entity.codigoSence != "")
            {
                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.r11Entity.fechaCaducidad)
                        @{string fechaFormat = Model.r11Entity.fechaCaducidad.ToString("yyyy-MM-dd");}
                        <input class="form-control text-box single-line" type="text" value=@fechaFormat readonly style="border: 0px">
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.r11Entity.codigoSence)
                        @Html.EditorFor(model => model.r11Entity.codigoSence, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", style = "border: 0px" } })
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.r11Entity.requisitosTecnicos)
                    @Html.TextAreaFor(model => model.r11Entity.requisitosTecnicos, new { @class = "form-control", rows = "3", @readonly = "readonly", style = "border: 0px" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.r11Entity.requisitosTecnicosRelatores)
                    @Html.TextAreaFor(model => model.r11Entity.requisitosTecnicosRelatores, new { @class = "form-control", rows = "3", @readonly = "readonly", style = "border: 0px" })
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div>
        @Html.ActionLink("Volver", "Index", "Curso", new { }, new { @class = "btn btn-default" })
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

