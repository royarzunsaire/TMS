@model SGC.Models.ClienteContacto

@{
    ViewBag.Title = "Representantes Empresa";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="page-title">Representantes Empresa</h2>
<hr />
<div class="row">
    <div class="col-md-5">
        <div class="form-group">
            @Html.LabelFor(model => model.cliente.nombreEmpresa, "Empresa", htmlAttributes: new { @class = "control-label" })
            <hr class="separador-ver" />
            @Html.EditorFor(model => model.cliente.nombreEmpresa, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
        </div>
    </div>
    <div class="col-md-5">
        <div class="form-group">
            @Html.LabelFor(model => model.cliente.razonSocial, "Razón Social", htmlAttributes: new { @class = "control-label" })
            <hr class="separador-ver" />
            @Html.EditorFor(model => model.cliente.razonSocial, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            @Html.LabelFor(model => model.cliente.rut, "R.U.T.", htmlAttributes: new { @class = "control-label" })
            <hr class="separador-ver" />
            @Html.EditorFor(model => model.cliente.rut, new { htmlAttributes = new { @class = "form-control ver", @readonly = "readonly" } })
        </div>
    </div>
</div>
<hr />
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("Create", "ClienteContacto", FormMethod.Post, new { }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.cliente.idCliente)
            <div class="row">
                <div class="col-md-12">
                    <h4>Contactos de la Empresa</h4>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.contacto.idContacto, "Contactos", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.contacto.idContacto, (SelectList)ViewBag.contactosCliente, "", htmlAttributes: new { @class = "form-control select2" })
                    </div>
                </div>
            </div>
            @*<div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.cliente.idCliente, "Usuarios", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.contacto.usuario.Id, (SelectList)ViewBag.usuarios, "", htmlAttributes: new { @class = "form-control select2" })
                    </div>
                </div>
            </div>*@
            <div class="row">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-primary pull-right">Guardar</button>
                </div>
            </div>
        }
    </div>
    @*<div class="col-md-6">
        @using (Html.BeginForm("Create", "ClienteContacto", FormMethod.Post, new { }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.cliente.idCliente)*@
            @*<div class="row">
                <div class="col-md-12">
                    <h4>Contactos Disponibles</h4>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.contacto.idContacto, "Contactos", htmlAttributes: new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.contacto.idContacto, (SelectList)ViewBag.contactos, "", htmlAttributes: new { @class = "form-control select2", id = "idContacto" })
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-primary pull-right"
                                        onclick="return loadModal('myModal', 'myModalContent', '/Contacto/NewModalCreate', {idDropDownList:'idContacto'});" title="Crear Contacto">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>*@
            @*<div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.cliente.idCliente, "Usuarios", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.contacto.usuario.Id, (SelectList)ViewBag.usuarios, "", htmlAttributes: new { @class = "form-control select2" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-primary pull-right">Guardar</button>
                </div>
            </div>*@
        @*}
    </div>*@
</div>
<hr />
<div class="row">
    <div class="col-md-12">
        <div class="portlet box blue-dark">
            <div class="portlet-title">
                <div class="caption">
                    Contactos con Acceso
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse"> </a>
                    <a href="javascript:;" class="fullscreen"> </a>
                </div>
                @*<div class="actions" style="margin-right: 10px">
                    <button id="btnMostrarAgregar" class="btn btn-circle btn-sm btn-default btn-group-lg">
                        <i class="fa fa-plus-circle"></i> Nuevo
                    </button>
                </div>*@
            </div>
            <div class="portlet-body">
                <div class="row">
                    <div class="col-md-12">
                        @*<div id="alerta" class="alert alert-danger" role="alert" hidden>
                            No se puede eliminar el documento de compromiso debido a que tiene una factura.
                        </div>*@
                        <table class="table table-striped table-bordered table-hover dt-responsive dataTable" id="sys-table" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>
                                        Nombre
                                    </th>
                                    <th>
                                        R.U.T.
                                    </th>
                                    <th>
                                        Usuario
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.cliente.clienteContactos)
                                {
                                    <tr>
                                        @using (Html.BeginForm("Delete", "ClienteContacto", FormMethod.Post, new { id = "formEliminar" + item.contacto.idContacto }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <td>
                                                @Html.DisplayFor(modelItem => item.contacto.nombreCompleto)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.contacto.run)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.contacto.usuario.UserName)
                                            </td>
                                            <td class="text-center">
                                                <div class="input-group-btn">
                                                    @Html.ActionLink(" ", "Details", "Contacto", new { id = item.contacto.idContacto }, htmlAttributes: new { @class = "btn btn-info btn-sm glyphicon glyphicon-list", @datatoggle = "tooltip", @title = "Ver" })
                                                    <input type="hidden" name="idCliente" value="@item.cliente.idCliente" />
                                                    <input type="hidden" name="idContacto" value="@item.contacto.idContacto" />
                                                    <button type="button" onclick="eliminar('formEliminar' + '@item.contacto.idContacto')" class="btn btn-danger btn-sm glyphicon glyphicon-trash" title="Eliminar"></button>
                                                </div>
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        @Html.ActionLink("Volver", "", "Cliente", new { }, new { @class = "btn btn-default" })
    </div>
</div>


<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" id='myModalContent'>
            </div>
        </div>
    </div>
</div>


<div class="modal fade draggable-modal modalx"
     id="modalConfirmarEliminar"
     tabindex="-1"
     data-backdrop="static"
     data-keyboard="false"
     role="dialog"
     aria-labelledby="deleteLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="row">
                    <div class="col-md-10">
                        <h4 class="modal-title" id="deleteLabel">Confirmar Eliminación</h4>
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div>
                    <h4 class="text-danger text-center">¿Está seguro que desea continuar?</h4>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6 text-left">
                        <button type="button" class="btn btn-primary" id="deleteCancel" data-dissmiss="modal">Cancelar</button>
                    </div>
                    <div class="col-md-6">
                        <input type="hidden" id="idEliminar" value="" />
                        <button type="button" class="btn btn-danger" id="deleteConfirm">Eliminar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#deleteConfirm').click(function () {
                $('#' + $('#idEliminar').val()).submit();
            });
            $("#deleteCancel").click(function () {
                $("#modalConfirmarEliminar").modal('hide');
            });
        });
        function eliminar(id) {
            $('#idEliminar').val(id);
            $('#modalConfirmarEliminar').modal({ keyboard: true }, 'show');
            return false;
        }
    </script>
}





