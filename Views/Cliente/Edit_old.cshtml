@model SGC.Models.Cliente

@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar </h2>
@{HtmlHelper.UnobtrusiveJavaScriptEnabled = true;}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


<div class="form-horizontal">
    <h4>Datos empresa</h4>
    <hr />
    @Html.HiddenFor(model => model.idCliente)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.nombreEmpresa, "Nombre Empresa", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombreEmpresa, new { htmlAttributes = new { @class = "form-control", placeholder = "ej .Constructora Cerro Castillo" } })
            @Html.ValidationMessageFor(model => model.nombreEmpresa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.razonSocial, "Razón social", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.razonSocial, new { htmlAttributes = new { @class = "form-control", placeholder = "ej .Constructora Cerro Castillo S.A." } })
            @Html.ValidationMessageFor(model => model.razonSocial, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.idMandante, "Empresa mandante", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownListFor(x => Model.idMandante, (SelectList)ViewBag.Mandante, "Seleccionar", htmlAttributes: new { @class = "form-control", id = "idMandante" })
        </div>
        <div class="col-md-2">
            <div class="btn btn-primary btn-large glyphicon glyphicon-plus"
                 onclick="return loadModal('myModal', 'myModalContent', '/Mandante/Create', {idDropDownList:'idMandante'});" alt="Crear mandante"></div>

            @*@Html.ActionLink(" ", "EditResources", "NicheSites", new { ViewBag.dbc, item.locale, ViewBag.domainId, domainName = ViewBag.domaiName }, new { @class = "glyphicon glyphicon-edit" })*@
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.rut, "R.U.T.", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-9">
            @Html.EditorFor(model => model.rut, new { htmlAttributes = new { @class = "form-control", placeholder = "99999999" } })
            @Html.ValidationMessageFor(model => model.rut, "", new { @class = "text-danger" })
        </div>

    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.idGiro, "Giro", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownListFor(x => Model.idGiro, (SelectList)ViewBag.giros, "Seleccionar", htmlAttributes: new { @class = "form-control", id = "idGiro" })
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.telefonoCorporativo, "Teléfono corporativo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.telefonoCorporativo, new { htmlAttributes = new { @class = "form-control", placeholder = "55-2 551234" } })
            @Html.ValidationMessageFor(model => model.telefonoCorporativo, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="form-horizontal">
    <h4>Facturación</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.idEncargadoPagos, "Encargado Pagos", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownListFor(x => Model.idEncargadoPagos, (SelectList)ViewBag.EncargadoPagos, "Seleccionar", htmlAttributes: new { @class = "form-control", id = "idEncargadoPago" })
        </div>
        <div class="col-md-2">
            <div class="btn btn-primary btn-large glyphicon glyphicon-plus"
                 onclick="return loadModal('myModal', 'myModalContent', '/Contacto/NewModalCreate',);" alt="Crear Encargado Pago"></div>

            @*@Html.ActionLink(" ", "EditResources", "NicheSites", new { ViewBag.dbc, item.locale, ViewBag.domainId, domainName = ViewBag.domaiName }, new { @class = "glyphicon glyphicon-edit" })*@
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.idTiposDocumentosPago, "Tipo doc. de pago", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownListFor(x => Model.idTiposDocumentosPago, (SelectList)ViewBag.TiposDocumentosPago, "Seleccionar", htmlAttributes: new { @class = "form-control", id = "idTiposDocumentosPago" })
            @Html.ValidationMessageFor(model => model.idTiposDocumentosPago, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.direccion, "Dirección", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control", placeholder = "Azapa #123456, Antofagasta" } })
            @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idRepresentanteLegal, "Representante legal", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownListFor(x => Model.idRepresentanteLegal, (SelectList)ViewBag.RepresentanteLegal, "Seleccionar", htmlAttributes: new { @class = "form-control", id = "idRepresentanteLegal" })
        </div>
        <div class="col-md-2">
            <div class="btn btn-primary btn-large glyphicon glyphicon-plus"
                 onclick="return loadModal('myModal', 'myModalContent', '/Contacto/ModalCreate',);" alt="Crear Encargado Pago"></div>

            @*@Html.ActionLink(" ", "EditResources", "NicheSites", new { ViewBag.dbc, item.locale, ViewBag.domainId, domainName = ViewBag.domaiName }, new { @class = "glyphicon glyphicon-edit" })*@
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.portalNotasExterno, "Portal Notas Externo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.portalNotasExterno, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.portalNotasExterno, "", new { @class = "text-danger" })
            <small>Debe ingresar la URL del sitio</small>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.descEspecial, "Descripción especial", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.descEspecial, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.descEspecial, "", new { @class = "text-danger" })
            <small>Ingresar una descripción especial</small>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.situacionComercial, "Situación comercial", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(x => x.situacionComercial, "Seleccionar", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.situacionComercial, "", new { @class = "text-danger" })
            <small>Estado comercial en que se encuentra el cliente</small>
        </div>
    </div>
</div>
    <div class="form-horizontal">

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
     @Html.ActionLink("Volver", "Index",new { },new {@class= "btn btn-default" })
</div>

<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" id='myModalContent'>
            </div>
        </div>
    </div>

</div>


