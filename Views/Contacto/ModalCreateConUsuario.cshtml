@model SGC.Models.ViewModelContacto


@using (Ajax.BeginForm("CreateConUsuario", "Contacto", new { }
    ,
    new AjaxOptions { HttpMethod = "POST" }, new { id = "formModalCreate" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-12">
            <div class="modal-title">
                <h4>Contacto</h4>
            </div>
            <hr style="margin-bottom:0" />
            <div class="modal-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model._idCliente, new { @id = "_idCliente" })
                <div class="form-group">
                    @Html.LabelFor(model => model._contacto.nombres, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model._contacto.nombres, new { htmlAttributes = new { @class = "form-control nombre-propio", placeholder = "Nombres" } })
                    @Html.ValidationMessageFor(model => model._contacto.nombres, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model._contacto.apellidoPaterno, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model._contacto.apellidoPaterno, new { htmlAttributes = new { @class = "form-control nombre-propio", placeholder = "Apellido Paterno" } })
                    @Html.ValidationMessageFor(model => model._contacto.apellidoPaterno, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model._contacto.apellidoMaterno, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model._contacto.apellidoMaterno, new { htmlAttributes = new { @class = "form-control nombre-propio", placeholder = "Apellido Materno" } })
                    @Html.ValidationMessageFor(model => model._contacto.apellidoMaterno, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model._contacto.run, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model._contacto.run, new { htmlAttributes = new { @class = "form-control run", placeholder = "RUN", id = "run" } })
                    @Html.ValidationMessageFor(model => model._contacto.run, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model._contacto.fechaNacimiento, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model._contacto.fechaNacimiento, new { htmlAttributes = new { @class = "form-control datepicker", placeholder = "Fecha de Nacimiento" } })
                    @Html.ValidationMessageFor(model => model._contacto.fechaNacimiento, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model._contacto.correo, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model._contacto.correo, new { htmlAttributes = new { @class = "form-control", placeholder = "Correo Electrónico" } })
                    @Html.ValidationMessageFor(model => model._contacto.correo, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model._contacto.telefono, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model._contacto.telefono, new { htmlAttributes = new { @class = "form-control", placeholder = "Teléfono/Celular" } })
                    @Html.ValidationMessageFor(model => model._contacto.telefono, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model._idUsuario, "Vincular con usuario", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(x => Model._idUsuario, (SelectList)ViewBag.usuarios, "Seleccionar", htmlAttributes: new { @class = "form-control", id = "idUsuario" })
                </div>
            </div>
            <div class="modal-footer">
                <input id="modalCreateSubmit" type="submit" onclick="saveModalCreateContacto('@ViewBag.idDropDownList')" value="Guardar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        $(".datepicker").datepicker({
            format: 'dd/mm/yy',
            autoclose: true
        });

        $(".nombre-propio").focusout(function () {
            $(this).val(capitalizeEachFirstLetter($(this).val()));
        });

        $("#rut,#run").focusout(function () {
            if (rutValido($("#rut,#run").val())) {
                $("#msgerror").html("");
                $("#rut,#run").val(rutFormato($("#rut,#run").val()));
            } else {
                toastr.error("ingrese un RUT valido", "RUT no valido");
                $("#rut,#run").val("");
            }
        });
    });
</script>