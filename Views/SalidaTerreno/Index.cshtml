@model IEnumerable<SGC.Models.SalidaTerreno>

@{
    ViewBag.Title = "Listado SalidaTerreno";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>
    Listado de Salidas a Terreno
</h2>
<hr />
<div class="row">
    <div class="col-md-3">
        <div class="form-group">
            <label class="control-label">Fecha Inicio</label>
            <div class="input-group">
                <input id="fechaInicio" value="" class="form-control datepicker" />
                <span class="input-group-btn">
                    <button id="btnBorrarFechaInicio" type="button" class="btn btn-default"><i class="fa fa-close"></i></button>
                </span>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <label class="control-label">Fecha Término</label>
            <div class="input-group">
                <input id="fechaTermino" value="" class="form-control datepicker" />
                <span class="input-group-btn">
                    <button id="btnBorrarFechaTermino" type="button" class="btn btn-default"><i class="fa fa-close"></i></button>
                </span>
            </div>
        </div>
    </div>
</div>

<table id="table" class="table table-striped table-bordered table-hover dt-responsive dataTable no-footer">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.cliente.nombreEmpresa)
            </th>
            <th>
                @Html.DisplayName("Vendedor")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.fecha)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.hora)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.estado)
            </th>
            <th>
                @Html.DisplayName("Sucursal")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (item.cliente != null)
                    {
                        @Html.DisplayFor(modelItem => item.cliente.nombreEmpresa)
                    }
                    @if (item.posibleCliente != null)
                    {
                        @Html.DisplayFor(modelItem => item.posibleCliente)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.vendedor.UserName)
                </td>
                <td data-sort="@item.fecha.ToString("MM/dd/yyyy")">
                    @Html.DisplayFor(modelItem => item.fecha)
                    
<td>
                    @Html.DisplayFor(modelItem => item.hora)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.estado)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sucursal.nombre)
                </td>
                <td>
                    @Html.ActionLink(" ", "Details", new { id = item.idSalidaTerreno }, htmlAttributes: new { @class = "btn btn-info glyphicon glyphicon-list", @datatoggle = "tooltip", @title = "Ver" })
                </td>
            </tr>
        }
    </tbody>
</table>


@section Scripts {
    <script>
        /* Custom filtering function which will search data in column 3 between two values */
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                fi = $("#fechaInicio").val().split("/")
                ft = $("#fechaTermino").val().split("/")
                f = data[2].split("/")
                fechaInicio = new Date(fi[2], fi[1] - 1, fi[0])
                fechaTermino = new Date(ft[2], ft[1] - 1, ft[0])
                fecha = new Date(f[2], f[1] - 1, f[0])
                if ((isNaN(fechaInicio) && isNaN(fechaTermino)) ||
                    (isNaN(fechaInicio) && fecha <= fechaTermino) ||
                    (fechaInicio <= fecha && isNaN(fechaTermino)) ||
                    (fechaInicio <= fecha && fecha <= fechaTermino)) {
                    return true;
                }
                return false;
            }
        );

        $(document).ready(function () {

            //var table = $('#table').DataTable();

            var table = $('#table').DataTable({
                stateSave: true,
                scrollY: "900px",
                scrollCollapse: true,
                "language": {
                    "lengthMenu": "Mostrar _MENU_ registros",
                    "zeroRecords": "No se encontraron resultados",
                    "info": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "infoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sSearch": "Buscar:",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "sProcessing": "Procesando...",
                }
            });

            // Event listener to the two range filtering inputs to redraw on input
            $('#fechaInicio, #fechaTermino').change(function () {
                table.draw();
            });

            $('#btnBorrarFechaInicio').click(function () {
                $('#fechaInicio').val('');
                $('#fechaInicio').trigger('change');
            });

            $('#btnBorrarFechaTermino').click(function () {
                $('#fechaTermino').val('');
                $('#fechaTermino').trigger('change');
            });
        });
    </script>
}

