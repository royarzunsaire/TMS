@model IEnumerable<SGC.Models.SalidaTerreno>

@{
    ViewBag.Title = "Listado SalidaTerreno";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>
    Listado de Salidas a Terreno @Html.ActionLink(" ", "Create", "/Create", htmlAttributes: new { @class = "btn btn-primary btn-large glyphicon glyphicon-plus", @datatoggle = "tooltip", @title = "Nuevo" })
</h2>
<p>

</p>
<table class="table table-striped table-bordered table-hover dt-responsive dataTable no-footer" id="sys-table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.cliente.nombreEmpresa)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.fecha)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.hora)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.estado)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @if (item.cliente != null)
                {
                    @Html.DisplayFor(modelItem => item.cliente.nombreEmpresa)
                }
                @if (item.posibleCliente != null)
                {
                    @Html.DisplayFor(modelItem => item.posibleCliente)
                    @Html.DisplayName(" (Posible Cliente)")
                }
            </td>
            <td data-sort="@item.fecha.ToString("MM/dd/yyyy")">
                @Html.DisplayFor(modelItem => item.fecha)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.hora)
            </td>
            <td id="tdEstado-@item.idSalidaTerreno">
                @if (item.estado == SGC.Models.EstadoSalidaTerreno.Programado || item.estado == SGC.Models.EstadoSalidaTerreno.Reprogramado)
                {
                    <input type="hidden" id="seleccionado-@item.idSalidaTerreno" value="@((int)item.estado)" />
                    using (Html.BeginForm("CambiarEstado", "SalidaTerreno", FormMethod.Post, new { id = "form-estado-" + @item.idSalidaTerreno }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(modelItem => item.idSalidaTerreno)
                        @Html.EnumDropDownListFor(modelItem => item.estado, htmlAttributes: new { @class = "form-control", @onchange = "confirmarCambiarEstado(" + @item.idSalidaTerreno + ")", @id = "item_estado-" + item.idSalidaTerreno })
                    }
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.estado)
                }
            </td>
            <td id="tdOpciones-@item.idSalidaTerreno">
                @if (item.estado == SGC.Models.EstadoSalidaTerreno.Programado || item.estado == SGC.Models.EstadoSalidaTerreno.Reprogramado)
                {
                    <button onclick="mostrarResumen(@item.idSalidaTerreno)" type="button" class="btn btn-primary">Resumen</button>
                    <input type="hidden" id="valorResumen-@item.idSalidaTerreno" value="@item.observacion" />
                    <input type="hidden" id="valorMotivo-@item.idSalidaTerreno" value="@item.motivo" />
                    @Html.ActionLink(" ", "Edit", new { id = item.idSalidaTerreno }, htmlAttributes: new { @class = "btn btn-warning  glyphicon glyphicon-edit", @datatoggle = "tooltip", @title = "Editar" })
                    @Html.ActionLink(" ", "Delete", new { id = item.idSalidaTerreno }, htmlAttributes: new { @class = "btn btn-danger glyphicon glyphicon-trash", @datatoggle = "tooltip", @title = "Borrar" })
                }
                else
                {
                    <button onclick="verResumen(@item.idSalidaTerreno)" type="button" class="btn btn-primary">Detalles</button>
                    <input type="hidden" id="valorMotivo-ver-@item.idSalidaTerreno" value="@item.motivo" />
                    <input type="hidden" id="valorResumen-ver-@item.idSalidaTerreno" value="@item.observacion" />
                }
            </td>
        </tr>
        }
    </tbody>
</table>

<div id="modal-resumen" class="modal fade draggable-modal modalx" tabindex="-1" data-keyboard="false" role="alertdialog" aria-hidden="true">
    <div class="modal-dialog">
        <div id="modal-content" class="modal-content">
            <div class="modal-header">
                <div class="row">
                    <div class="col-md-6">
                        <h4 class="modal-title">Ingresar detalle de la visita</h4>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
            </div>
            @using (Html.BeginForm("Resumen", "SalidaTerreno", FormMethod.Post, new { id = "form-resumen" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <input type="hidden" id="idSalidaTerreno" name="idSalidaTerreno" value="" />
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.TextArea("resumen", new { @class = "form-control" })
                                @Html.ValidationMessage("resumen", "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" value="Guardar" class="btn btn-primary" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                </div>
            }
        </div>
    </div>
</div>

<div id="modal-resumen-ver" class="modal fade draggable-modal modalx" tabindex="-1" data-keyboard="false" role="alertdialog" aria-hidden="true">
    <div class="modal-dialog">
        <div id="modal-content" class="modal-content">
            <div class="modal-header">
                <div class="row">
                    <div class="col-md-6">
                        <h4 class="modal-title">Detalle de la visita</h4>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="control-label">Motivo</label>
                            @Html.TextArea("motivo-ver", new { @class = "form-control", @readonly = "readonly", @style = "border: 0px" })
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="control-label">Resumen</label>
                            @Html.TextArea("resumen-ver", new { @class = "form-control", @readonly = "readonly", @style = "border: 0px" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div id="modal-confirmar" class="modal fade draggable-modal modalx" data-backdrop="static" tabindex="-1" role="alertdialog" aria-hidden="true">
    <div class="modal-dialog">
        <div id="modal-content" class="modal-content">
            <input type="hidden" id="idSalidaTerrenoConfirmar" name="idSalidaTerreno" value="" />
            <div class="modal-body text-center">
                <p>¿Esta seguro que desea cambiar de estado?</p>
            </div>
            <div class="modal-footer">
                <button id="btnConfirmar" type="button" onclick="cambiarEstado()" class="btn btn-primary">Aceptar</button>
                <button id="btnCancelar" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $("#item_estado-" + $("#idSalidaTerrenoConfirmar").val()).val($("#seleccionado-" + $("#idSalidaTerrenoConfirmar").val()).val());
        function mostrarResumen(id) {
            $("#idSalidaTerreno").val(id);
            $("#resumen").val($("#valorResumen-" + id).val());
            $('#modal-resumen').modal({ keyboard: true }, 'show');
        }
        function verResumen(id) {
            $("#motivo-ver").val($("#valorMotivo-ver-" + id).val());
            $("#resumen-ver").val($("#valorResumen-ver-" + id).val());
            $('#modal-resumen-ver').modal({ keyboard: true }, 'show');
        }
        function confirmarCambiarEstado(id) {
            $("#idSalidaTerrenoConfirmar").val(id);
            $('#modal-confirmar').modal({ keyboard: true }, 'show');
        }
        $("#btnCancelar").click(function () {
            $("#item_estado-" + $("#idSalidaTerrenoConfirmar").val()).val($("#seleccionado-" + $("#idSalidaTerrenoConfirmar").val()).val());
        });
        function cambiarEstado() {
            $('#modal-confirmar').modal('hide');
            $.ajax({
                url: "/SalidaTerreno/CambiarEstado",
                type: "post",
                data: $("#form-estado-" + $("#idSalidaTerrenoConfirmar").val()).serialize(),
                success: function (response) {
                    console.log("Ajax call is done");
                    if (response.HasErrors) {
                        $("#item_estado-" + $("#idSalidaTerrenoConfirmar").val()).val($("#seleccionado-" + $("#idSalidaTerrenoConfirmar").val()).val());
                        showErrorMessages(response.Errors, 'Se produjo un error al cambiar de estado.');
                    }
                    else {
                        if ($("#item_estado-" + $("#idSalidaTerrenoConfirmar").val()).val() === "1" || $("#item_estado-" + $("#idSalidaTerrenoConfirmar").val()).val() === "2") {
                            $("#tdEstado-" + $("#idSalidaTerrenoConfirmar").val()).html($("#item_estado-" + $("#idSalidaTerrenoConfirmar").val() + " option:selected").text());
                            resumen = $("#valorResumen-" + $("#idSalidaTerrenoConfirmar").val()).val();
                            motivo = $("#valorMotivo-" + $("#idSalidaTerrenoConfirmar").val()).val();
                            $("#tdOpciones-" + $("#idSalidaTerrenoConfirmar").val()).empty();
                            $("#tdOpciones-" + $("#idSalidaTerrenoConfirmar").val())
                                .append($('<button>')
                                    .attr("class", "btn btn-primary")
                                    .attr("type", "button")
                                    .attr("onclick", "verResumen(" + $("#idSalidaTerrenoConfirmar").val() + ")")
                                    .html("Detalles")
                                )
                                .append($('<input>')
                                    .attr("id", "valorResumen-ver-" + $("#idSalidaTerrenoConfirmar").val())
                                    .attr("type", "hidden")
                                    .val(resumen)
                                )
                                .append($('<input>')
                                    .attr("id", "valorMotivo-ver-" + $("#idSalidaTerrenoConfirmar").val())
                                    .attr("type", "hidden")
                                    .val(motivo)
                                );
                        }
                        else {
                            $("#seleccionado-" + $("#idSalidaTerrenoConfirmar").val()).val($("#item_estado-" + $("#idSalidaTerrenoConfirmar").val()).val())
                        }
                    }
                }
            });
            return false;
        }
        $("#form-resumen").submit(function () {
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (response) {
                    console.log("Ajax call is done");
                    if (response.HasErrors) {
                        showErrorMessages(response.Errors, 'Se produjo un error al guardar el resumen.');
                        $('#modal-resumen').modal('hide');
                    }
                    else {
                        $("#valorResumen-" + $("#idSalidaTerreno").val()).val($("#resumen").val());
                        $('#modal-resumen').modal('hide');
                    }
                }
            });
            return false;
        });
        function showErrorMessages(errors, titulo) {
            errores = "";
            for (i = 0; i < errors.length; i++) {
                errores = errores + "<br>" + errors[i].Value;
            }
            Swal.fire({
                title: titulo,
                html: errores
            })
        }
    </script>
}
