@model SGC.Models.SalidaTerreno

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar Salida a Terreno</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="portlet light bordered">
        <div class="portlet-body" id="datos-cliente">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.idSalidaTerreno)
            <div class="row">
                <div class="col-md-6">
                    @if (Model.posibleCliente != null)
                    {
                        <div class="form-group" id="divCliente" hidden>
                            @Html.Label("cliente", "Cliente", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.cliente.idCliente, (SelectList)ViewBag.clientes, "Seleccionar", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessage("cliente", "", new { @class = "text-danger" })
                        </div>
                        if (Model.cliente != null)
                        {
                            <input type="hidden" id="hiddenCliente" value="@Model.cliente.idCliente">
                        }
                        else
                        {
                            <input type="hidden" id="hiddenCliente" value="">
                        }
                        <div class="form-group" id="divPosibleCliente">
                            @Html.LabelFor(model => model.posibleCliente, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.posibleCliente, new { htmlAttributes = new { @class = "form-control nombre-propio" } })
                            @Html.ValidationMessageFor(model => model.posibleCliente, "", new { @class = "text-danger" })
                        </div>
                        <input type="hidden" id="hiddenPosibleCliente" value="@Model.posibleCliente">
                    }
                    else
                    {
                        <div class="form-group" id="divCliente">
                            @Html.Label("cliente", "Cliente", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.cliente.idCliente, (SelectList)ViewBag.clientes, "Seleccionar", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessage("cliente", "", new { @class = "text-danger" })
                        </div>
                        if (Model.cliente != null)
                        {
                            <input type="hidden" id="hiddenCliente" value="@Model.cliente.idCliente">
                        }
                        else
                        {
                            <input type="hidden" id="hiddenCliente" value="">
                        }
                        <div class="form-group" id="divPosibleCliente" hidden>
                            @Html.LabelFor(model => model.posibleCliente, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.posibleCliente, new { htmlAttributes = new { @class = "form-control nombre-propio" } })
                            @Html.ValidationMessageFor(model => model.posibleCliente, "", new { @class = "text-danger" })
                        </div>
                        <input type="hidden" id="hiddenPosibleCliente" value="@Model.posibleCliente">
                    }
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.fecha, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.hora, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.hora, new { htmlAttributes = new { @class = "form-control timepicker" } })
                        @Html.ValidationMessageFor(model => model.hora, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    @if (Model.posibleCliente != null)
                    {
                        <div id="divBtnPosibleCliente" class="form-group" hidden>
                            <button type="button" id="btnPosibleCliente" class="btn btn-primary">Posible Cliente</button>
                        </div>
                        <div id="divBtnCliente" class="form-group">
                            <button type="button" id="btnCliente" class="btn btn-primary">Cliente Existente</button>
                        </div>
                    }
                    else
                    {
                        <div id="divBtnPosibleCliente" class="form-group">
                            <button type="button" id="btnPosibleCliente" class="btn btn-primary">Posible Cliente</button>
                        </div>
                        <div id="divBtnCliente" class="form-group" hidden>
                            <button type="button" id="btnCliente" class="btn btn-primary">Cliente Existente</button>
                        </div>
                    }
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.sucursal.idSucursal, "Sucursal", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.sucursal.idSucursal, (SelectList)ViewBag.sucursales, htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.motivo, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.motivo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.motivo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @Html.ActionLink("Volver", "MisSalidas", "", new { @class = "btn btn-default" })
        </div>
        <div class="col-md-6 text-right">
            <input type="submit" value="Guardar" class="btn btn-primary" />
        </div>
    </div>
}


@section Scripts {
    <script>
        $("#btnPosibleCliente").click(function () {
            $("#divBtnCliente").show();
            $("#divPosibleCliente").show();
            $("#divBtnPosibleCliente").hide();
            $("#divCliente").hide();
            $("#cliente_idCliente option:selected").removeAttr("selected");
            $("#posibleCliente").val($("#hiddenPosibleCliente").val());
        })
        $("#btnCliente").click(function () {
            $("#divBtnCliente").hide();
            $("#divPosibleCliente").hide();
            $("#posibleCliente").val('');
            $("#divBtnPosibleCliente").show();
            $("#divCliente").show();
            $("#cliente_idCliente").val($("#hiddenCliente").val());
        })
    </script>
}